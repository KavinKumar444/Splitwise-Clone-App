{"ast":null,"code":"import axios from 'axios';\nconst API_URL = 'http://localhost:8000';\nconst api = axios.create({\n  baseURL: API_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\nexport const apiService = {\n  // User endpoints\n  createUser: user => api.post('/users', user),\n  getUsers: () => api.get('/users'),\n  getUser: id => api.get(`/users/${id}`),\n  // Group endpoints\n  createGroup: group => api.post('/groups', group),\n  getGroups: () => api.get('/groups'),\n  getGroup: id => api.get(`/groups/${id}`),\n  // Expense endpoints\n  createExpense: (group_id, expense) => api.post(`/expenses/groups/${group_id}/expenses`, expense),\n  getGroupExpenses: group_id => api.get(`/expenses/groups/${group_id}/expenses`),\n  // Balance endpoints\n  getGroupBalances: group_id => api.get(`/balances/groups/${group_id}`),\n  getUserBalances: user_id => api.get(`/balances/users/${user_id}`)\n};","map":{"version":3,"names":["axios","API_URL","api","create","baseURL","headers","apiService","createUser","user","post","getUsers","get","getUser","id","createGroup","group","getGroups","getGroup","createExpense","group_id","expense","getGroupExpenses","getGroupBalances","getUserBalances","user_id"],"sources":["F:/downloads/FS/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nexport interface User {\r\n  id: number;\r\n  name: string;\r\n  email: string;\r\n}\r\n\r\nexport interface Group {\r\n  id: number;\r\n  name: string;\r\n  members: User[];\r\n}\r\n\r\nexport interface Expense {\r\n  id: number;\r\n  description: string;\r\n  amount: number;\r\n  split_type: 'equal' | 'percentage';\r\n  paid_by: number;\r\n  group_id: number;\r\n  splits: {\r\n    id: number;\r\n    user_id: number;\r\n    amount: number;\r\n    percentage?: number;\r\n  }[];\r\n}\r\n\r\nexport interface Balance {\r\n  user_id: number;\r\n  amount: number;\r\n  user_name: string;\r\n}\r\n\r\nexport interface GroupBalance {\r\n  group_id: number;\r\n  group_name: string;\r\n  balances: Balance[];\r\n}\r\n\r\nexport interface UserBalance {\r\n  user_id: number;\r\n  user_name: string;\r\n  group_balances: GroupBalance[];\r\n}\r\n\r\nexport const apiService = {\r\n  // User endpoints\r\n  createUser: (user: { name: string; email: string }) =>\r\n    api.post<User>('/users', user),\r\n  getUsers: () => api.get<User[]>('/users'),\r\n  getUser: (id: number) => api.get<User>(`/users/${id}`),\r\n\r\n  // Group endpoints\r\n  createGroup: (group: { name: string; user_ids: number[] }) =>\r\n    api.post<Group>('/groups', group),\r\n  getGroups: () => api.get<Group[]>('/groups'),\r\n  getGroup: (id: number) => api.get<Group>(`/groups/${id}`),\r\n\r\n  // Expense endpoints\r\n  createExpense: (group_id: number, expense: {\r\n    description: string;\r\n    amount: number;\r\n    paid_by: number;\r\n    split_type: 'equal' | 'percentage';\r\n    splits: { user_id: number; amount: number; percentage?: number }[];\r\n  }) => api.post<Expense>(`/expenses/groups/${group_id}/expenses`, expense),\r\n  getGroupExpenses: (group_id: number) =>\r\n    api.get<Expense[]>(`/expenses/groups/${group_id}/expenses`),\r\n\r\n  // Balance endpoints\r\n  getGroupBalances: (group_id: number) =>\r\n    api.get<GroupBalance>(`/balances/groups/${group_id}`),\r\n  getUserBalances: (user_id: number) =>\r\n    api.get<UserBalance>(`/balances/users/${user_id}`),\r\n}; "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,uBAAuB;AAEvC,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEH,OAAO;EAChBI,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;AA+CF,OAAO,MAAMC,UAAU,GAAG;EACxB;EACAC,UAAU,EAAGC,IAAqC,IAChDN,GAAG,CAACO,IAAI,CAAO,QAAQ,EAAED,IAAI,CAAC;EAChCE,QAAQ,EAAEA,CAAA,KAAMR,GAAG,CAACS,GAAG,CAAS,QAAQ,CAAC;EACzCC,OAAO,EAAGC,EAAU,IAAKX,GAAG,CAACS,GAAG,CAAO,UAAUE,EAAE,EAAE,CAAC;EAEtD;EACAC,WAAW,EAAGC,KAA2C,IACvDb,GAAG,CAACO,IAAI,CAAQ,SAAS,EAAEM,KAAK,CAAC;EACnCC,SAAS,EAAEA,CAAA,KAAMd,GAAG,CAACS,GAAG,CAAU,SAAS,CAAC;EAC5CM,QAAQ,EAAGJ,EAAU,IAAKX,GAAG,CAACS,GAAG,CAAQ,WAAWE,EAAE,EAAE,CAAC;EAEzD;EACAK,aAAa,EAAEA,CAACC,QAAgB,EAAEC,OAMjC,KAAKlB,GAAG,CAACO,IAAI,CAAU,oBAAoBU,QAAQ,WAAW,EAAEC,OAAO,CAAC;EACzEC,gBAAgB,EAAGF,QAAgB,IACjCjB,GAAG,CAACS,GAAG,CAAY,oBAAoBQ,QAAQ,WAAW,CAAC;EAE7D;EACAG,gBAAgB,EAAGH,QAAgB,IACjCjB,GAAG,CAACS,GAAG,CAAe,oBAAoBQ,QAAQ,EAAE,CAAC;EACvDI,eAAe,EAAGC,OAAe,IAC/BtB,GAAG,CAACS,GAAG,CAAc,mBAAmBa,OAAO,EAAE;AACrD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}